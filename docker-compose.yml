version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: bugrelay-postgres
    environment:
      POSTGRES_DB: bugrelay
      POSTGRES_USER: bugrelay_user
      POSTGRES_PASSWORD: bugrelay_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bugrelay_user -d bugrelay"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bugrelay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: bugrelay-backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=bugrelay
      - DB_USER=bugrelay_user
      - DB_PASSWORD=bugrelay_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key-change-in-production
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: air -c .air.toml

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: bugrelay-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: