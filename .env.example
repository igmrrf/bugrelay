# BugRelay Environment Configuration Template
# Copy this file to .env and customize the values for your environment
# All services read from this single configuration file

#==============================================================================
# CORE APPLICATION SETTINGS
#==============================================================================

# Environment mode: development, staging, production
ENVIRONMENT=development

# Application domain (used for CORS, OAuth redirects, SSL)
DOMAIN=localhost
MONITORING_DOMAIN=localhost

#==============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
#==============================================================================

# PostgreSQL connection settings
DB_HOST=postgres
DB_PORT=5432
DB_NAME=bugrelay
DB_USER=bugrelay_user
DB_PASSWORD=bugrelay_password
DB_SSLMODE=disable

# PostgreSQL container settings (for Docker Compose)
POSTGRES_DB=bugrelay
POSTGRES_USER=bugrelay_user
POSTGRES_PASSWORD=bugrelay_password

#==============================================================================
# REDIS CONFIGURATION
#==============================================================================

# Redis connection settings
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=

# Redis container settings (for Docker Compose)
REDIS_REQUIREPASS=

#==============================================================================
# BACKEND APPLICATION SETTINGS
#==============================================================================

# Server configuration
PORT=8080
HOST=0.0.0.0

# JWT Authentication
JWT_SECRET=your-jwt-secret-key-change-in-production-minimum-32-characters
JWT_ACCESS_TOKEN_TTL=15m
JWT_REFRESH_TOKEN_TTL=168h

# OAuth Configuration
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
OAUTH_REDIRECT_URL=http://localhost:8080/api/v1/auth/oauth/callback

# reCAPTCHA Configuration
RECAPTCHA_SECRET_KEY=your-recaptcha-secret-key
NEXT_PUBLIC_RECAPTCHA_SITE_KEY=your-recaptcha-site-key

# API Security
LOGS_API_KEY=dev-api-key-change-in-production

#==============================================================================
# FRONTEND APPLICATION SETTINGS
#==============================================================================

# API Configuration
NEXT_PUBLIC_API_URL=http://localhost:8080/api/v1

# Development settings
WATCHPACK_POLLING=true

# Logging Configuration
BACKEND_LOGS_URL=http://localhost:8080
BACKEND_API_KEY=dev-api-key

#==============================================================================
# EMAIL CONFIGURATION
#==============================================================================

# SMTP Settings (for production notifications and alerts)
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@bugrelay.com

# Development Email Testing (MailHog)
MAILHOG_HOST=mailhog
MAILHOG_PORT=1025

#==============================================================================
# MONITORING STACK CONFIGURATION
#==============================================================================

# Grafana Settings
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin123
GRAFANA_ROOT_URL=http://localhost:3001
GRAFANA_SECRET_KEY=your-grafana-secret-key-32-chars-minimum

# Prometheus Settings
PROMETHEUS_RETENTION_TIME=15d
PROMETHEUS_STORAGE_PATH=/prometheus
PROMETHEUS_SCRAPE_INTERVAL=15s
PROMETHEUS_EVALUATION_INTERVAL=15s
PROMETHEUS_CLUSTER=bugrelay
PROMETHEUS_SELF_SCRAPE_INTERVAL=60s
BACKEND_TARGET=backend:8080
FRONTEND_TARGET=frontend:3000
BACKEND_SCRAPE_INTERVAL=15s
FRONTEND_SCRAPE_INTERVAL=30s
LOKI_SCRAPE_INTERVAL=30s
GRAFANA_SCRAPE_INTERVAL=60s

# Loki Settings
LOKI_RETENTION_PERIOD=7d
LOKI_CACHE_SIZE_MB=100
LOKI_MAX_QUERY_SERIES=10000
LOKI_MAX_QUERY_PARALLELISM=16
LOKI_COMPACTION_INTERVAL=10m
LOKI_RETENTION_ENABLED=true
LOKI_RETENTION_DELETE_DELAY=2h
LOKI_RETENTION_DELETE_WORKER_COUNT=50

# AlertManager Settings
ALERTMANAGER_EXTERNAL_URL=http://localhost:9093
ALERT_GROUP_WAIT=10s
ALERT_GROUP_INTERVAL=5m
ALERT_REPEAT_INTERVAL=1h
CRITICAL_GROUP_WAIT=10s
CRITICAL_REPEAT_INTERVAL=30m
WARNING_GROUP_WAIT=2m
WARNING_REPEAT_INTERVAL=2h

#==============================================================================
# PRODUCTION ALERTING CONFIGURATION
#==============================================================================

# SMTP Configuration for Alerts
SMTP_HOST=
SMTP_FROM=alerts@bugrelay.com
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_REQUIRE_TLS=true

# Email Recipients
DEFAULT_EMAIL_TO=ops-team@bugrelay.com
CRITICAL_EMAIL_TO=ops-team@bugrelay.com,engineering@bugrelay.com
DATABASE_EMAIL_TO=dba-team@bugrelay.com,ops-team@bugrelay.com
SECURITY_EMAIL_TO=security-team@bugrelay.com,ops-team@bugrelay.com
WARNING_EMAIL_TO=ops-team@bugrelay.com
MONITORING_EMAIL_TO=ops-team@bugrelay.com

# Slack Integration (for alerts)
SLACK_WEBHOOK_URL=
SLACK_CRITICAL_CHANNEL=#alerts-critical
SLACK_DATABASE_CHANNEL=#database-alerts
SLACK_SECURITY_CHANNEL=#security-alerts
SLACK_WARNING_CHANNEL=#alerts-warning

# PagerDuty Integration (for critical alerts)
PAGERDUTY_INTEGRATION_KEY=

#==============================================================================
# SSL/TLS CONFIGURATION (Production)
#==============================================================================

# SSL Certificate paths (for Nginx in production)
SSL_CERT_PATH=/etc/nginx/ssl/bugrelay.com.crt
SSL_KEY_PATH=/etc/nginx/ssl/bugrelay.com.key

# Let's Encrypt settings
LETSENCRYPT_EMAIL=admin@bugrelay.com

#==============================================================================
# BACKUP CONFIGURATION (Production)
#==============================================================================

# AWS S3 Backup Settings
BACKUP_S3_BUCKET=
BACKUP_S3_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# Backup Schedule (cron format)
BACKUP_SCHEDULE=0 2 * * *

#==============================================================================
# NGINX CONFIGURATION (Production)
#==============================================================================

# Nginx settings
NGINX_CLIENT_MAX_BODY_SIZE=10M
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024

#==============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
#==============================================================================

# Air (Go hot reload) settings
AIR_BUILD_CMD=go build -o ./tmp/main .
AIR_BUILD_DIR=./tmp

# Development debugging
DEBUG_PORT=2345
ENABLE_DEBUG=false

#==============================================================================
# SECURITY SETTINGS
#==============================================================================

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization

# Security headers
ENABLE_SECURITY_HEADERS=true
HSTS_MAX_AGE=31536000

#==============================================================================
# LOGGING CONFIGURATION
#==============================================================================

# Log levels: debug, info, warn, error
LOG_LEVEL=info
LOG_FORMAT=json

# Log file paths
LOG_FILE_PATH=/app/logs/app.log
ERROR_LOG_PATH=/app/logs/error.log

#==============================================================================
# PERFORMANCE SETTINGS
#==============================================================================

# Database connection pooling
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=300s

# Redis connection pooling
REDIS_POOL_SIZE=10
REDIS_MIN_IDLE_CONNS=5

# Application timeouts
HTTP_READ_TIMEOUT=30s
HTTP_WRITE_TIMEOUT=30s
HTTP_IDLE_TIMEOUT=120s

#==============================================================================
# FEATURE FLAGS
#==============================================================================

# Enable/disable features
ENABLE_OAUTH=true
ENABLE_RECAPTCHA=false
ENABLE_EMAIL_VERIFICATION=false
ENABLE_RATE_LIMITING=true
ENABLE_MONITORING=true

#==============================================================================
# DOCKER COMPOSE PROFILES
#==============================================================================

# Available profiles: dev, prod
# Set via: docker-compose --profile dev up
# Or via: COMPOSE_PROFILES=dev docker-compose up
COMPOSE_PROFILES=dev