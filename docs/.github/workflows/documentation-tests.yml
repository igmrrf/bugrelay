name: Documentation Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'backend/**'
      - '.github/workflows/documentation-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'backend/**'
      - '.github/workflows/documentation-tests.yml'

jobs:
  documentation-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: docs/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Install Node.js dependencies
      working-directory: docs
      run: npm ci
      
    - name: Generate documentation
      working-directory: docs
      run: npm run generate:all
      
    - name: Validate OpenAPI specification
      working-directory: docs
      run: npm run validate:openapi
      
    - name: Validate JSON schemas
      working-directory: docs
      run: npm run validate:schemas
      
    - name: Check documentation completeness
      working-directory: docs
      run: npm run check:completeness
      
    - name: Test code example accuracy
      working-directory: docs
      run: npm run test:example-accuracy
      
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: docs/test-reports/
        retention-days: 30

  api-integration-tests:
    runs-on: ubuntu-latest
    needs: documentation-validation
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: bugrelay_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: docs/package-lock.json
        
    - name: Install Node.js dependencies
      working-directory: docs
      run: npm ci
      
    - name: Build backend
      working-directory: backend
      run: |
        go mod download
        go build -o bugrelay-server ./main.go
        
    - name: Run database migrations
      working-directory: backend
      env:
        DATABASE_URL: postgres://testuser:testpassword@localhost:5432/bugrelay_test?sslmode=disable
        REDIS_URL: redis://localhost:6379
      run: |
        # Add migration command here when available
        echo "Database migrations would run here"
        
    - name: Start backend server
      working-directory: backend
      env:
        DATABASE_URL: postgres://testuser:testpassword@localhost:5432/bugrelay_test?sslmode=disable
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key-for-ci
        PORT: 8080
      run: |
        ./bugrelay-server &
        sleep 10
        
    - name: Wait for API to be ready
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done'
        
    - name: Run API accuracy tests
      working-directory: docs
      env:
        API_BASE_URL: http://localhost:8080
      run: npm run test:accuracy
      
    - name: Run comprehensive test suite
      working-directory: docs
      env:
        API_BASE_URL: http://localhost:8080
      run: npm run test:comprehensive
      
    - name: Upload comprehensive test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: comprehensive-test-reports
        path: docs/test-reports/
        retention-days: 30

  documentation-build:
    runs-on: ubuntu-latest
    needs: [documentation-validation, api-integration-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: docs/package-lock.json
        
    - name: Install dependencies
      working-directory: docs
      run: npm ci
      
    - name: Generate documentation
      working-directory: docs
      run: npm run generate:all
      
    - name: Build documentation site
      working-directory: docs
      run: npm run build:site
      
    - name: Upload documentation build
      uses: actions/upload-artifact@v3
      with:
        name: documentation-site
        path: docs/.vitepress/dist/
        retention-days: 30