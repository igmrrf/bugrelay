name: Documentation Link Validation

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  validate-links:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: docs/package-lock.json
        
    - name: Install dependencies
      run: |
        cd docs
        npm ci
        
    - name: Generate documentation assets
      run: |
        cd docs
        npm run generate:all
        
    - name: Validate links
      run: |
        cd docs
        npm run validate:links
        
    - name: Upload link validation report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: link-validation-report
        path: docs/test-reports/link-validation.json
        retention-days: 30
        
    - name: Comment PR with validation results
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'docs/test-reports/link-validation.json';
          
          if (fs.existsSync(path)) {
            const report = JSON.parse(fs.readFileSync(path, 'utf8'));
            
            const comment = `## 🔗 Link Validation Report
            
            **Status:** ${report.summary.status === 'passed' ? '✅ Passed' : '❌ Failed'}
            **Errors:** ${report.summary.errors}
            **Warnings:** ${report.summary.warnings}
            
            ${report.summary.errors > 0 ? `
            ### Critical Errors
            ${report.errors.map(error => `- **${error.type.toUpperCase()}**: ${error.message}`).join('\n')}
            ` : ''}
            
            ${report.summary.warnings > 0 ? `
            ### Warnings
            ${report.warnings.slice(0, 5).map(warning => `- **${warning.type?.toUpperCase() || 'GENERAL'}**: ${warning.message}`).join('\n')}
            ${report.warnings.length > 5 ? `\n... and ${report.warnings.length - 5} more warnings` : ''}
            ` : ''}
            
            <details>
            <summary>📊 Statistics</summary>
            
            - **Total Files:** ${report.summary.totalFiles}
            - **Internal Links:** ${report.summary.internalLinks}
            - **External Links:** ${report.summary.externalLinks}
            - **Anchor Links:** ${report.summary.anchorLinks}
            
            </details>
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }