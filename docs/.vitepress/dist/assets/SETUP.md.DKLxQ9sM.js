import{_ as a,c as i,o as s,ag as n}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Documentation Setup Guide","description":"","frontmatter":{},"headers":[],"relativePath":"SETUP.md","filePath":"SETUP.md","lastUpdated":1761938024000}'),t={name:"SETUP.md"};function l(o,e,r,p,d,c){return s(),i("div",null,[...e[0]||(e[0]=[n(`<h1 id="documentation-setup-guide" tabindex="-1">Documentation Setup Guide <a class="header-anchor" href="#documentation-setup-guide" aria-label="Permalink to &quot;Documentation Setup Guide&quot;">â€‹</a></h1><p>This guide explains how to set up and maintain the BugRelay backend documentation system.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">â€‹</a></h2><ul><li>Node.js 18+ and npm</li><li>Go 1.21+ (for analyzing the backend codebase)</li><li>Git (for version control)</li></ul><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">â€‹</a></h2><ol><li><p><strong>Install dependencies:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><strong>Generate documentation (optional - basic docs already exist):</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate:all</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>Start development server:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The documentation will be available at <a href="http://localhost:3001" target="_blank" rel="noreferrer">http://localhost:3001</a></p></li><li><p><strong>Build for production:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h2 id="current-status" tabindex="-1">Current Status <a class="header-anchor" href="#current-status" aria-label="Permalink to &quot;Current Status&quot;">â€‹</a></h2><p>The documentation system is currently set up with:</p><ul><li>âœ… VitePress configuration and basic structure</li><li>âœ… Homepage with feature overview</li><li>âœ… API reference landing page</li><li>âœ… Authentication guide with JWT/OAuth examples</li><li>âœ… Data models documentation</li><li>âœ… Deployment guide with Docker/Kubernetes</li><li>âœ… Quick start guide with code examples</li><li>ðŸ”„ Auto-generation scripts (in development)</li><li>ðŸ”„ OpenAPI specification generation</li><li>ðŸ”„ JSON schema generation</li></ul><h2 id="directory-structure" tabindex="-1">Directory Structure <a class="header-anchor" href="#directory-structure" aria-label="Permalink to &quot;Directory Structure&quot;">â€‹</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>â”œâ”€â”€ api/                    # API documentation</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ openapi.yaml       # Generated OpenAPI spec</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ endpoints/         # Endpoint documentation</span></span>
<span class="line"><span>â”‚   â””â”€â”€ examples/          # Request/response examples</span></span>
<span class="line"><span>â”œâ”€â”€ models/                # Data model documentation</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ schema.json        # Generated JSON schemas</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ data-models.md     # Human-readable docs</span></span>
<span class="line"><span>â”‚   â””â”€â”€ relationships.md   # Model relationships</span></span>
<span class="line"><span>â”œâ”€â”€ authentication/        # Auth documentation</span></span>
<span class="line"><span>â”œâ”€â”€ deployment/           # Setup and deployment guides</span></span>
<span class="line"><span>â”œâ”€â”€ mcp/                  # MCP integration docs</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ tools.json        # Generated MCP tools</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ server.py         # MCP server implementation</span></span>
<span class="line"><span>â”‚   â””â”€â”€ schemas/          # MCP schemas</span></span>
<span class="line"><span>â”œâ”€â”€ guides/               # Tutorials and guides</span></span>
<span class="line"><span>â”œâ”€â”€ scripts/              # Generation scripts</span></span>
<span class="line"><span>â”œâ”€â”€ .vitepress/           # VitePress configuration</span></span>
<span class="line"><span>â””â”€â”€ .github/workflows/    # CI/CD pipeline</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="documentation-generation" tabindex="-1">Documentation Generation <a class="header-anchor" href="#documentation-generation" aria-label="Permalink to &quot;Documentation Generation&quot;">â€‹</a></h2><h3 id="openapi-specification" tabindex="-1">OpenAPI Specification <a class="header-anchor" href="#openapi-specification" aria-label="Permalink to &quot;OpenAPI Specification&quot;">â€‹</a></h3><p>The OpenAPI specification is automatically generated from the Go backend codebase:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate:openapi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This script analyzes:</p><ul><li>Router definitions in <code>backend/internal/router/</code></li><li>Handler functions in <code>backend/internal/handlers/</code></li><li>Model structs in <code>backend/internal/models/</code></li></ul><h3 id="json-schemas" tabindex="-1">JSON Schemas <a class="header-anchor" href="#json-schemas" aria-label="Permalink to &quot;JSON Schemas&quot;">â€‹</a></h3><p>JSON Schema definitions are generated from Go model structs:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate:schemas</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="mcp-documentation" tabindex="-1">MCP Documentation <a class="header-anchor" href="#mcp-documentation" aria-label="Permalink to &quot;MCP Documentation&quot;">â€‹</a></h3><p>Model Context Protocol documentation for AI integration:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate:mcp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">â€‹</a></h2><p>Validate all generated documentation:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> validate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This checks:</p><ul><li>OpenAPI specification compliance</li><li>JSON Schema validity</li><li>MCP tool definition format</li><li>Documentation completeness</li></ul><h2 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">â€‹</a></h2><ol><li><strong>Make changes to the backend code</strong></li><li><strong>Regenerate documentation:</strong><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><strong>Validate changes:</strong><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> validate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><strong>Preview locally:</strong><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><strong>Commit and push</strong> - CI/CD will automatically deploy</li></ol><h2 id="ci-cd-pipeline" tabindex="-1">CI/CD Pipeline <a class="header-anchor" href="#ci-cd-pipeline" aria-label="Permalink to &quot;CI/CD Pipeline&quot;">â€‹</a></h2><p>The documentation is automatically:</p><ul><li>Generated when backend code changes</li><li>Validated for correctness</li><li>Deployed to GitHub Pages (on main branch)</li></ul><p>See <code>.github/workflows/docs.yml</code> for the complete pipeline.</p><h2 id="customization" tabindex="-1">Customization <a class="header-anchor" href="#customization" aria-label="Permalink to &quot;Customization&quot;">â€‹</a></h2><h3 id="adding-new-endpoints" tabindex="-1">Adding New Endpoints <a class="header-anchor" href="#adding-new-endpoints" aria-label="Permalink to &quot;Adding New Endpoints&quot;">â€‹</a></h3><p>When adding new API endpoints:</p><ol><li>The OpenAPI generator will automatically detect them</li><li>Add manual documentation in <code>api/endpoints/</code> if needed</li><li>Include examples in <code>api/examples/</code></li></ol><h3 id="adding-new-models" tabindex="-1">Adding New Models <a class="header-anchor" href="#adding-new-models" aria-label="Permalink to &quot;Adding New Models&quot;">â€‹</a></h3><p>When adding new data models:</p><ol><li>The schema generator will automatically create JSON schemas</li><li>Add human-readable documentation in <code>models/data-models.md</code></li><li>Update relationship documentation in <code>models/relationships.md</code></li></ol><h3 id="mcp-integration" tabindex="-1">MCP Integration <a class="header-anchor" href="#mcp-integration" aria-label="Permalink to &quot;MCP Integration&quot;">â€‹</a></h3><p>To add new MCP tools:</p><ol><li>Update <code>scripts/generate-mcp.js</code></li><li>Add tool definitions to the tools array</li><li>Update the server implementation if needed</li></ol><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">â€‹</a></h2><h3 id="generation-errors" tabindex="-1">Generation Errors <a class="header-anchor" href="#generation-errors" aria-label="Permalink to &quot;Generation Errors&quot;">â€‹</a></h3><p>If documentation generation fails:</p><ol><li>Check that the backend code compiles</li><li>Verify Go module dependencies are up to date</li><li>Check script logs for specific errors</li></ol><h3 id="build-errors" tabindex="-1">Build Errors <a class="header-anchor" href="#build-errors" aria-label="Permalink to &quot;Build Errors&quot;">â€‹</a></h3><p>If the documentation site fails to build:</p><ol><li>Validate generated files: <code>npm run validate</code></li><li>Check VitePress configuration in <code>.vitepress/config.js</code></li><li>Verify all referenced files exist</li></ol><h3 id="missing-documentation" tabindex="-1">Missing Documentation <a class="header-anchor" href="#missing-documentation" aria-label="Permalink to &quot;Missing Documentation&quot;">â€‹</a></h3><p>If endpoints or models are missing:</p><ol><li>Check that they follow standard Go conventions</li><li>Verify they are exported (capitalized names)</li><li>Update generation scripts if needed</li></ol><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">â€‹</a></h2><p>When contributing to the documentation:</p><ol><li>Follow the existing structure and conventions</li><li>Test changes locally before committing</li><li>Update this guide if adding new features</li><li>Ensure all validation passes</li></ol><h2 id="support" tabindex="-1">Support <a class="header-anchor" href="#support" aria-label="Permalink to &quot;Support&quot;">â€‹</a></h2><p>For documentation issues:</p><ul><li>Check the troubleshooting section above</li><li>Review the generation script logs</li><li>Open an issue with specific error messages</li></ul>`,60)])])}const m=a(t,[["render",l]]);export{u as __pageData,m as default};
