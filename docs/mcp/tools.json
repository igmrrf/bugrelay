{
  "tools": [
    {
      "name": "create_bug_report",
      "description": "Create a new bug report in the BugRelay system",
      "inputSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Bug report title (max 255 characters)",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the bug"
          },
          "application_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the application where the bug was found"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ],
            "description": "Priority level of the bug",
            "default": "medium"
          },
          "operating_system": {
            "type": "string",
            "description": "Operating system where the bug occurred"
          },
          "device_type": {
            "type": "string",
            "description": "Type of device (desktop, mobile, tablet)"
          },
          "app_version": {
            "type": "string",
            "description": "Version of the application"
          },
          "browser_version": {
            "type": "string",
            "description": "Browser version (if web application)"
          }
        },
        "required": [
          "title",
          "description",
          "application_id"
        ]
      }
    },
    {
      "name": "get_bug_report",
      "description": "Retrieve a bug report by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "bug_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the bug report to retrieve"
          }
        },
        "required": [
          "bug_id"
        ]
      }
    },
    {
      "name": "search_bug_reports",
      "description": "Search for bug reports with filters",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query for bug title and description"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "reviewing",
              "fixed",
              "wont_fix"
            ],
            "description": "Filter by bug status"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ],
            "description": "Filter by priority level"
          },
          "application_id": {
            "type": "string",
            "format": "uuid",
            "description": "Filter by application ID"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Maximum number of results to return"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "default": 0,
            "description": "Number of results to skip for pagination"
          }
        }
      }
    },
    {
      "name": "authenticate_user",
      "description": "Authenticate a user and obtain access token",
      "inputSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "description": "User password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    },
    {
      "name": "get_user_profile",
      "description": "Get the current user profile information",
      "inputSchema": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user (optional, defaults to current user)"
          }
        }
      }
    }
  ]
}